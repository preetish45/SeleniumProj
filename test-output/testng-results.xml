<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-30T10:34:28 IST" name="Suite" finished-at="2025-03-30T10:35:27 IST" duration-ms="58933">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidations()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" name="LoginErrorValidations" class="AutoProject.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="LoginTest.submitOrder(java.util.HashMap)[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" name="submitOrder" class="AutoProject.Tests.LoginTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-03-30T10:34:28 IST" name="Error Validations Test " finished-at="2025-03-30T10:35:15 IST" duration-ms="46484">
      <class name="AutoProject.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:34:28 IST" name="launchApplication" finished-at="2025-03-30T10:34:36 IST" duration-ms="7923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidations()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:34:36 IST" name="LoginErrorValidations" finished-at="2025-03-30T10:34:41 IST" duration-ms="4673" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email orr password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email orr password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at AutoProject.Tests.ErrorValidationsTest.LoginErrorValidations(ErrorValidationsTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:34:42 IST" name="tearDown" finished-at="2025-03-30T10:34:42 IST" duration-ms="494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:34:42 IST" name="launchApplication" finished-at="2025-03-30T10:34:47 IST" duration-ms="4522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidations()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:34:47 IST" name="ProductErrorValidations" finished-at="2025-03-30T10:35:14 IST" duration-ms="26857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutoProject.Tests.ErrorValidationsTest@651aed93]" started-at="2025-03-30T10:35:14 IST" name="tearDown" finished-at="2025-03-30T10:35:15 IST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AutoProject.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test  -->
    <test started-at="2025-03-30T10:34:28 IST" name="Login Test " finished-at="2025-03-30T10:35:27 IST" duration-ms="58933">
      <class name="AutoProject.Tests.LoginTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:34:29 IST" name="launchApplication" finished-at="2025-03-30T10:34:38 IST" duration-ms="9240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:34:38 IST" name="submitOrder" data-provider="getData" finished-at="2025-03-30T10:34:58 IST" duration-ms="19890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password123, product=ZARA COAT 3, email=preetish45@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:34:58 IST" name="tearDown" finished-at="2025-03-30T10:34:59 IST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:34:59 IST" name="launchApplication" finished-at="2025-03-30T10:35:03 IST" duration-ms="4519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:35:03 IST" name="submitOrder" data-provider="getData" finished-at="2025-03-30T10:35:20 IST" duration-ms="17117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:35:20 IST" name="tearDown" finished-at="2025-03-30T10:35:21 IST" duration-ms="483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:35:21 IST" name="launchApplication" finished-at="2025-03-30T10:35:25 IST" duration-ms="4169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:35:25 IST" name="OrderHistoryTest" finished-at="2025-03-30T10:35:27 IST" depends-on-methods="AutoProject.Tests.LoginTest.submitOrder" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutoProject.Tests.LoginTest@18317edc]" started-at="2025-03-30T10:35:27 IST" name="tearDown" finished-at="2025-03-30T10:35:27 IST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AutoProject.Tests.LoginTest -->
    </test> <!-- Login Test  -->
  </suite> <!-- Suite -->
</testng-results>
